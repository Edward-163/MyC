用gdb查看内存

格式: x /nfu addr

x 是 examine 的缩写

n表示要显示的内存单元的个数

f表示显示方式, 可取如下值
x 按十六进制格式显示变量。
d 按十进制格式显示变量。
u 按十进制格式显示无符号整型。
o 按八进制格式显示变量。
t 按二进制格式显示变量。
a 按十六进制格式显示变量。
i 指令地址格式
c 按字符格式显示变量。
f 按浮点数格式显示变量。

u表示一个地址单元的长度
b表示单字节，
h表示双字节，
w表示四字节，
g表示八字节

gdb查看0x54320 16个字节内容,以16进制显示
x /16xb 0x54320
如p/x var    // 这个x是指以16进制print

display 命令查看变量或表达式的值，每当程序暂停执行（例如单步执行）时，GDB 调试器都会自动帮我们打印出来，而 print 命令则不会。
仔细观察display 变量名的输出,会有跟踪号
undisplay 跟踪号

bt backtrace 打印当前的函数调用栈的所有信息。
bt <n> n是一个正整数，表示只打印栈顶上n层的栈信息。
bt <-n> -n表一个负整数，表示只打印栈底下n层的栈信息。
f <n> n是一个从0开始的整数，是栈中的层编号。比如：frame 0，表示栈顶，frame 1，表示栈的第二层
up <n>表示向栈的上面移动n层，可以不打n，表示向上移动一层。
down <n> 表示向栈的下面移动n层，可以不打n，表示向下移动一层。
select-frame <n> 不打印堆栈信息；对应于 frame 命令。
up-silently <n> 不打印堆栈信息；对应于 up 命令。
down-silently <n> 不打印堆栈信息；对应于 down 命令。
show endian

